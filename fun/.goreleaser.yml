# .goreleaser.yml configuration

# GoReleaser configuration for Fun Server
project_name: fun

# Environment variables that are passed to the build process
env:
  - GO111MODULE=on

# Actions to run before the build process starts
before:
  hooks:
    # You may remove this if you don't use go modules.
    - go mod download
    # Download containerd binaries for all platforms
    - go run ../scripts/download_containerd.go

# Build configuration
builds:
  - id: fun
    main: ./main.go
    binary: fun
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin
    goarch:
      - amd64
      - 386
      - arm64
    ignore:
      - goos: darwin
        goarch: 386
    mod_timestamp: '{{ .CommitTimestamp }}'
    flags:
      - -trimpath
    ldflags:
      - -s -w
      - -X main.Version={{.Version}}
      - -X main.BuildTime={{.Date}}
      - -X main.GitCommit={{.ShortCommit}}
    # Add build hooks to ensure service-related flags are available
    hooks:
      pre: go generate ./...

# Archive configuration
archives:
  - id: fun-zip
    name_template: "{{ .ProjectName }}-{{ .Os }}-{{ .Arch }}-{{ .Version }}"
    format: zip
    files:
      - LICENSE
      - README.md
      - config/**/*
      # Include bundled containerd binaries
      - src: binaries/windows/containerd.exe
        dst: binaries/windows/
      # Include bundled runc binaries
      - src: binaries/windows/runc.exe
        dst: binaries/windows/
      # Include bundled CNI plugins (all .exe files in the cni directory)
      - src: binaries/windows/cni/**/*.exe
        dst: binaries/windows/cni/
    builds:
      - fun
    allow_different_binary_count: true
    format_overrides:
      - goos: windows
        format: zip
      
  - id: fun-targz
    name_template: "{{ .ProjectName }}-{{ .Os }}-{{ .Arch }}-{{ .Version }}"
    format: tar.gz
    files:
      - LICENSE
      - README.md
      - config/**/*
      # Include bundled containerd binaries for Linux
      - src: binaries/linux/containerd
        dst: binaries/linux/
      # Include bundled runc binaries for Linux
      - src: binaries/linux/runc
        dst: binaries/linux/
      # Include bundled CNI plugins for Linux
      - src: binaries/linux/cni/*
        dst: binaries/linux/cni/
      # Include bundled containerd binaries for macOS
      - src: binaries/darwin/containerd
        dst: binaries/darwin/
    builds:
      - fun
    allow_different_binary_count: true
    format_overrides:
      - goos: darwin
        format: tar.gz
      - goos: linux
        format: tar.gz

# Checksum configuration
checksum:
  name_template: 'checksums.txt'
  algorithm: sha256

# Changelog configuration
changelog:
  sort: asc
  filters:
    exclude:
      - '^docs:'
      - '^test:'
      - '^ci:'
      - Merge pull request
      - Merge branch

# Release configuration
release:
  disable: false
  draft: true
  prerelease: auto

# Linux packaging formats (deb, rpm)
nfpms:
  - id: fun-linux-packages
    package_name: fun-server
    homepage: https://thefunserver.com
    maintainer: Fun Server Team <team@thefunserver.com>
    description: Fun Server - Docker container management made simple
    license: Apache-2.0
    vendor: The Fun Server Team
    
    # Package formats to generate
    formats:
      - deb
      - rpm
    
    # Package-specific configurations
    deb:
      lintian_overrides:
        - statically-linked-binary
        - changelog-file-missing-in-native-package
    rpm:
      group: Applications/System
      compression: lzma
      
    # Runtime dependencies
    dependencies:
      - bash
    recommends:
      - docker
      
    # Control where packages are built
    builds:
      - fun
    
    # File mapping configuration
    contents:
      # Configuration files
      - src: fun/config/config.json
        dst: /etc/fun/config.json
        type: config
        file_info:
          mode: 0644

# Add a comment about the removed sections that could be implemented using the proper GoReleaser configuration
# Note: The following sections were removed due to incompatibility with the current GoReleaser version:
# - dmg: macOS DMG configuration
# - macospkgs: macOS pkg configuration
# - msi: Windows MSI configuration
# These should be implemented using the proper configuration or external scripts 