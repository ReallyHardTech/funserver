name: Build

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Required for GoReleaser to get the correct version

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          check-latest: true
          
      - name: Install GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          install-only: true
          version: latest
          
      - name: Install WiX Toolset
        run: |
          mkdir -p "$env:RUNNER_TEMP\wix"
          Invoke-WebRequest "https://github.com/wixtoolset/wix3/releases/download/wix3112rtm/wix311-binaries.zip" -OutFile "$env:RUNNER_TEMP\wix-binaries.zip"
          Expand-Archive -Path "$env:RUNNER_TEMP\wix-binaries.zip" -DestinationPath "$env:RUNNER_TEMP\wix"
          echo "$env:RUNNER_TEMP\wix" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Download containerd binaries
        run: |
          cd fun
          go run ../scripts/download_containerd.go

      - name: Update Go dependencies
        run: |
          cd fun
          go mod tidy

      - name: Prepare Windows scripts
        run: |
          cd fun
          # Make sure the line endings for Windows scripts are CRLF
          foreach ($file in Get-ChildItem -Path scripts/windows -File -Filter *.cmd) {
            $content = Get-Content -Path $file.FullName -Raw
            $content = $content.Replace("`n", "`r`n")
            Set-Content -Path $file.FullName -Value $content -NoNewline
          }

      - name: Build with PowerShell script
        shell: pwsh
        run: |
          cd fun
          if ($env:GITHUB_REF.StartsWith("refs/tags/v")) {
            ./build.ps1 -Release
          } else {
            ./build.ps1 -Snapshot
          }

      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-artifacts
          path: fun/dist/
          retention-days: 5

  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Required for GoReleaser to get the correct version

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          check-latest: true

      - name: Install GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          install-only: true
          version: latest

      - name: Download containerd binaries
        run: |
          cd fun
          go run ../scripts/download_containerd.go

      - name: Update Go dependencies
        run: |
          cd fun
          go mod tidy

      - name: Make scripts executable
        run: |
          cd fun
          chmod +x scripts/macos/*
          
      - name: Build with shell script
        run: |
          cd fun
          chmod +x ./build.sh
          if [[ $GITHUB_REF == refs/tags/v* ]]; then
            ./build.sh --release
          else
            ./build.sh --snapshot
          fi

      - name: Upload macOS artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-artifacts
          path: fun/dist/
          retention-days: 5

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Required for GoReleaser to get the correct version

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          check-latest: true

      - name: Install GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          install-only: true
          version: latest

      - name: Install Linux packaging dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y rpm

      - name: Download containerd binaries
        run: |
          cd fun
          go run ../scripts/download_containerd.go

      - name: Update Go dependencies
        run: |
          cd fun
          go mod tidy

      - name: Make scripts executable
        run: |
          cd fun
          chmod +x scripts/*.sh

      - name: Build with shell script
        run: |
          cd fun
          chmod +x ./build.sh
          if [[ $GITHUB_REF == refs/tags/v* ]]; then
            ./build.sh --release
          else
            ./build.sh --snapshot
          fi

      - name: Upload Linux artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-artifacts
          path: fun/dist/
          retention-days: 5

  create-release:
    needs: [build-windows, build-macos, build-linux]
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: all-artifacts

      - name: Create combined directory
        run: |
          mkdir -p combined-artifacts
          cp -r all-artifacts/*/* combined-artifacts/
          ls -la combined-artifacts/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: combined-artifacts/*
          draft: true
          generate_release_notes: true 